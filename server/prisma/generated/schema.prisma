generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  email    String @unique
  password String

  username    String @unique
  displayName String @map("display_name")

  avatar      String?
  information String?

  role UserRole @default(REGULAR)

  isEmailVerified Boolean @default(false) @map("is_email_verified")
  isTwoFAEnabled  Boolean @default(false) @map("is_two_fa_enabled")
  twoFASecret     String? @map("two_fa_secret")

  tokens      Token[]
  socialLinks SocialLink[]
  stream      Stream?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model SocialLink {
  id String @id @default(uuid())

  title    String
  url      String
  position Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")

  @@map("social_links")
}

model Stream {
  id String @id @default(uuid())

  title      String
  previewUrl String? @map("preview_url")

  ingressId String? @unique @map("ingress_id")
  serverUrl String? @map("server_id")
  streamKey String? @map("stream_key")

  isLive Boolean @default(false) @map("is_live")

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @unique @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("streams")
}

model Token {
  id String @id @default(uuid())

  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

enum UserRole {
  REGULAR
  ADMIN
}

enum TokenType {
  EMAIL_VERIFY
  PASSWORD_RESET
  EMAIL_CHANGE

  @@map("token_types")
}
