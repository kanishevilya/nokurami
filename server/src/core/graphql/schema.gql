# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ChangeEmailInput {
  email: String!
  token: String!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input ChangeProfileInfoInput {
  displayName: String!
  information: String!
  username: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeviceModel {
  browser: String!
  os: String!
  type: String!
}

input Enable2FAInput {
  pin: String!
  secret: String!
}

input FiltersInput {
  searchKey: String
  skip: Float
  take: Float
}

type LocationModel {
  city: String!
  country: String!
  latitude: String!
  longitude: String!
}

input LoginInput {
  login: String!
  password: String!
  pin: String
}

type Mutation {
  changeEmail(data: ChangeEmailInput!): Boolean!
  changePassword(data: ChangePasswordInput!): Boolean!
  changeProfileInfo(data: ChangeProfileInfoInput!): Boolean!
  clearSessionFromCookie: Boolean!
  createSocialLink(data: SocialLinkInput!): Boolean!
  createUser(data: CreateUserInput!): Boolean!
  disable2FA: Boolean!
  enable2FA(data: Enable2FAInput!): Boolean!
  login(data: LoginInput!): UserModel!
  logout: Boolean!
  new_password(data: NewPasswordInput!): Boolean!
  removeSession(id: String!): Boolean!
  removeSocialLink(id: String!): Boolean!
  reorderSocialLinks(list: [SocialLinkOrderInput!]!): Boolean!
  requestToEmailChange: Boolean!
  reset_password(data: ResetPasswordInput!): Boolean!
  updateSocialLink(data: SocialLinkInput!, id: String!): Boolean!
  verifyAccount(data: VerificationInput!): UserModel!
}

input NewPasswordInput {
  confirmPassword: String!
  newPassword: String!
  token: String!
}

type Query {
  findAllStreams(filters: FiltersInput!): [StreamModel!]!
  findRandomStreams: [StreamModel!]!
  findSocialLinks: [SocialLinkModel!]!
  generateTotpSecret: TotpModel!
  getAllSessions: [SessionModel!]!
  getCurrentSession: SessionModel!
  getProfile: UserModel!
  getSessionsByUser: [SessionModel!]!
}

input ResetPasswordInput {
  email: String!
}

type SessionMetadataModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type SessionModel {
  createdAt: String!
  id: ID!
  metadata: SessionMetadataModel!
  userId: String!
}

input SocialLinkInput {
  title: String!
  url: String!
}

type SocialLinkModel {
  createdAt: DateTime!
  id: ID!
  position: Float!
  title: String!
  updatedAt: DateTime!
  url: String!
  userId: String!
}

input SocialLinkOrderInput {
  id: String!
  position: Float!
}

type StreamModel {
  createdAt: DateTime!
  id: ID!
  ingressId: String
  isLive: Boolean!
  previewUrl: String
  serverUrl: String
  streamKey: String
  title: String!
  updatedAt: DateTime!
  user: UserModel!
  userId: String!
}

type TotpModel {
  qrcodeUrl: String!
  secret: String!
}

type UserModel {
  avatar: String
  createdAt: DateTime!
  displayName: String!
  email: String!
  id: ID!
  information: String
  isEmailVerified: Boolean!
  isTwoFAEnabled: Boolean!
  password: String!
  role: String!
  socialLinks: [SocialLinkModel!]!
  stream: StreamModel!
  twoFASecret: String!
  updatedAt: DateTime!
  username: String!
}

input VerificationInput {
  token: String!
}